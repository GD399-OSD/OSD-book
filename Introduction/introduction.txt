# Free as in Freedom.

You probably heard that one before because it was never new and it never gets old and its a folk song... — LLewyn Davis

I have been teaching a class called Special Topics in Graphic Design: Open Source.

We keep a special class on the books at the Maryland Institute College of Art called "Special Topics in Graphic Design." Its there so if something catches a professors interest they can easily run one experimental section o fit without having to go through the rigamarole of adding a new class to the books...

Dave crossland at mica. google fonts. started a conversation about his background in open source and how that might have an effect on graphic designing. I asked him if he thought that using scribus and inkscape on linux led to different aesthetic or functional choices as a designer...

What is the purpose of design? How does it change with Open Source?

You often don't understand a problem until after the first time you implement a solution. If you want to get it right, be ready to start over at least once. How might one do this with their design practice? How about tools?

What are benefits of using open source tools? Why would a designer open source their visual materials?

Can code generate out design in a meaningful way?

What have I learned? what have we learned? what did we talk about?

Is there something aesthetically important we can learn from open source?

Any tool should be useful in the expected way, but a truly great tool lends itself to uses you never expected

do graphic designers make tools or just use tools

read and discuss stallman, raymond, and some other typical open source writings, also look at designers working in the realm of vernacular, DIY, etc.

Open source software powers much of the web and the modern tech world. Open source hardware powers all manner of maker spaces, workshops and offices. How do we use these mechanisms to the benefit of Graphic Design? This article's goal is to present the root ideals of the free/libre/open source software movements, and then apply them to the making of graphic design. Part of the paper covers the use of open source design tools, analyzing their pros and cons when compared to typical “industry-standard” making methods.

Questions being answered: What does “Open Source” mean in a Graphic Design context? How do visual designers help to iterate & improve these tools without the ability to code? How do non-mainstream tools change how we make graphic design? How do our design processes evolve & maintain transparency the same way open source communities & projects do? What do accessibility, transparency, and “freedom” bring aesthetically to visual design solutions?

Why not inkscape?
Why not scribus?
why not linux?

Nodebox is an interesting example of a toll that perhaps has one of the more intuitive interfaces I've used period. The normal rub against open source tools is taht the UI design is a nightmare. This is sort of a double strike against them from the point of view of a designer?

From a variety of places, I arrived at experimenting w some alternative tools to the adobe creative suite. I had a raspberry pi sitting unused leftover from a previous project and thought I might try actually using linux to do some design work of my own. Not to much later, David Crossland of Google Fonts visited our graphic design department at MICA and after finding out about his background in the libre graphics community ended up having a conversation with him about my ideas re: alternative, open tools… anyway, a class was born.

Since January I have been running a new course experiment at the Maryland Institute College of Art: Open Source Design.

I've had a lot of experience with open source communities on the web — I was a Drupal user fairly early on, have tried all sorts of CSS frameworks, and contemporary javascript plugins — but had never really tried to use linux to run anything other than a server, nor gave any of the desktop tools a real go. Personally and pedagogically I was interested in giving some things a go.

Stallman, GNU, cathedral and the bazaar, enzo mari's auto progettazione, DIYer counter culture 60s,70s, etc. stuff?

Are we limited by our tools?

Are we teaching students to use Adobe Creative Suite, or are we teaching them to be designers? How might alternative tools work better pedagogically in this goal?

The Adobe creative suite is a outcome of Contemporary capitalism and contemporary aesthetic modernism (becoming the new global styles instead, sort of neo-avant-modernism)

Stallman's main ideal is "Free and in Freedom." He didn't want to be limited by how or what he could do with the programming tools he was using. The mythology basically goes is that he gets frustrated with a printer, writes some new code for the print driver since he had the source code, but when the next version of the printer comes out it has the same problem but now xerox won't share the code so that he can fix it. This makes him so mad he walks out, quits his job at MIT, and writes the GNU manifesto … From then on focusing on free software (and literally living in his office at MIT still despite no longer officially working there [that's what having ideals gets you???]).

The gist of "free as in freedom" is multi-fold:
1. Free means that you have access to the under the hood raw materials and can tinker, fix, change, etc. at your will.
1. Free also means that your improvements, changes, whatever can and should also then be shareable/redistributable
1. It does not imply free as in no cost... Since the access to the source code is free, this is often the case, but it is not the intention.

Reading the _GNU manifesto_ and _the Cathedral and the Bazaar_ (as well as a handful of other new and old open-source/libre/free software related stuff) reminded me of an architecture book I frequently return to, _How Buildings Learn_ by Stewart Brand. Brand explains various ways that vernacular buildings work and learn from each other over time. Pulling from Eric Raymond's points in TCATB and some of Stallman's freedoms yields a number of similarities: releasing early and often, that the "design" is communal and open (no one owns the design?), bug fixes come from the community at large (see the housing addition diagrams?), and successes are moved forward while failures are removed over time, things are often modular, people solve their problems first which often end up being other people's problems...

Also from brand, the whole earth catalog.

The whole ecosystem of the whole earth catalog and the other sort of DIY, counter culture things from the 60s and 70s. Enzo Mari's Autoprogettazione, How to Build your own Living Structures, Nomadic Furniture, etc.

Open source as utopia?

What's humourous about all of this is that Design was historically open source... Life/Humanity has always evolved and grown based on slowly and building on whatever came before without worry of credit or cost or whatever else... That we need something like open source now is slightly amusing — Wanting to carefully protect our intellectual or creative "properties" is a fairly new ideal. Perhaps its connected to the fairly modern idea of artist/designer as unique, special, individual creator/solver of problems?? Capitalism of course needs to be able to make money off these things... so that is part of the rub too. But, "Open Source" still works in capitalism (see RedHat, or Acquia as examples — selling support and other services, etc. built on top of an otherwise free tool (Redhat mainly sells support for its linux distributions, Acquia sells support and specialized hosting for large Drupal websites)).

Open Design is not about community sourced design decisions, there can still be a single originator of the design, someone with singular vision, etc. but it does imply that there is transparency. (look at Garth's thoughts for reference on this?)

How does a designer fit into F/LOS?

F/LOS — Free, Libre, Open Source — Free as in Freedom...

The Four Freedoms:
https://www.gnu.org/philosophy/free-sw.html

The four essential freedoms
A program is free software if the program's users have the four essential freedoms:

The freedom to run the program as you wish, for any purpose (freedom 0).
The freedom to study how the program works, and change it so it does your computing as you wish (freedom 1). Access to the source code is a precondition for this.
The freedom to redistribute copies so you can help others (freedom 2).
The freedom to distribute copies of your modified versions to others (freedom 3). By doing this you can give the whole community a chance to benefit from your changes. Access to the source code is a precondition for this.
A program is free software if it gives users adequately all of these freedoms. Otherwise, it is nonfree. While we can distinguish various nonfree distribution schemes in terms of how far they fall short of being free, we consider them all equally unethical.

In any given scenario, these freedoms must apply to whatever code we plan to make use of, or lead others to make use of. For instance, consider a program A which automatically launches a program B to handle some cases. If we plan to distribute A as it stands, that implies users will need B, so we need to judge whether both A and B are free. However, if we plan to modify A so that it doesn't use B, only A needs to be free; B is not pertinent to that plan.

“Free software” does not mean “noncommercial”. A free program must be available for commercial use, commercial development, and commercial distribution. Commercial development of free software is no longer unusual; such free commercial software is very important. You may have paid money to get copies of free software, or you may have obtained copies at no charge. But regardless of how you got your copies, you always have the freedom to copy and change the software, even to sell copies.

The Libre Designer.

GNU's origins are in ethical utopia. Users are the same as neighbors, fellow citizens. We must apply our do unto others beliefs to the access and reuse of and extension of the tools we make, not just our person to person interactions.

>>> start GNU references

The GNU manifesto was originally written by Richard Stallman in 1985.

The GNU project is part of the Free Software movement a campaing for freedom for users of software — Do not confuse Free Software with Open Source. Open Source was a term coined in 1998 by people who disagree with the Free Software Movement's ethical values. It promotes an amoral approach to the same field.

"I consider that the Golden Rule requires that if I like a program I must share it with other people who like it." — stallman in GNU manifesto

The fundamental act of friendship among programmers is the sharing of programs. The purchaser of software must choose between friendship and obeying the law. GNU serves as an example to inspire and a banner to rally others to join us in sharing.

Once GNU is written, everyone will be able to obtain good system software free, just like air.

wasteful duplication of system programming effort will be avoided.

a user that needs to make changes to their system will always be free to make them.

schools will be able to provide a much more educational environment by encouraging all students to study and improve the sytem code.

Copying all or parts of a program is as natural to a programmer as breathing, and as productive. It ought to be as free.
[does this sentence work if you replace program with design and programmer with designer??? — copying all or part of a design is as natural to a designer as breathing, and as productive. It ought to be as free.]

distinguish between support in the form of real programming work and mere handholding.
[the handholding is often missing in my personal experience]

if anything desrves a reward it is social contribution. Creativity can be a social contribution, but only in so far as society is free to use the results.

There is nothing wrong with wanting to be paid for work or seeking to maximize one's income as long as one does not use means that are desctructive. The means customary in the field of software today are based on destruction. Restrictions reduce the amount and the ways that a program can be used. The reason a good citizen does not use such destructive means to become wealthier is that, if everyone did so, we would all become poorer from the mutual desctructiveness — this is Kantian ethics, or the Golden Rule. The desire to be rewarded for one's creativity does not justify depriving the world in general of all or part of that creativity.

Control over the use of one's ideas really constitutes control over other epopel's lives; and it is usually used to make their lives more difficult.

The intention was that nobody have to pay for permission to use gnu

Distuinguish carefully between free in the sense of freedom and free in the sense of price. Free software is software users have the freedom to change and distribute.

>>> end GNU references

## Open Source Design Manifesto
by Garth Braithwaite

I will:
- find opportunities to design in the open
- share my design experiences; both the good and the bad
- find time for meaningful projects
- openly participate in design discussions
- work with other designers by choice
- improve my toolbox

## Open Source Design Is Now Design Open

To work on open source design means to publish creative work with an open license, giving the community a chance to reuse and rework your content in ways you may not have considered. It is also the act of contributing design work to existing open source projects. Both executions of open source design imply that the work is open to contributions and collaboration from outside designers.

Although open sourcing is great, not every design can be published under an open license. However, almost every project can be designed openly

As an added benefit to designing in the open, it is a short leap to open source design.

encourage all designers to become familiar with open source and make contributions to projects they care about.

This is not merely a nice idea, it is a clarion call to shed our insecurities, pride, and paralyzing perfectionism; to dedicate effort to helping worthy causes; and to raise the quality of design and design education on the web. A call to design open. — How do we improve this? How do we carry on the discussion?

## On Being a Unicorn

if you use F/LOS graphics software, standards and methods in your art or design practice, chances are good you have something interesting to talk to developers about. What you have to talk to them about is the way you use their software.

## Designing Open Source

I profit from using these technologies but I don’t know where to start with fixing any of their bugs. It's really frustrating.

This is a real issue for designers — we don't really know how to jump in, its intimidating, its obtuse, its not designerly? We're good at solving problems, we're good at seeing places for improvement, but we don't know how to write computer programming... We might not even know how to use Github or IRC or any of that junk... Too many barriers?

## This is the first day of the rest of my Life

Anything awesome has a gestation period. We just happen to love believing in spontaneous creation.

Applying F/LOSS principles to art and design might help us improve visual literacy, just as F/LOSS improves computer literacy. Applying F/LOSS principles to art and design might help us better understand the knowledge present in the creative process.

Scientists have built an economy where giving things away will increase their reputation

Even if the production methods of art have changed radically, the art market is still built on scarcity. Galleries will produce a limited number of copies of a video or photograph even if this medium potentially allows for unlimited copying and redistribution.

allowing someone else to find something in my work that I had never seen before can be beautiful and fulfilling. Yet, having someone reinterpret my artwork is not the same as someone coming up with a clever new use for a sorting algorithm.

the experience opens up new possibilities

F/LOSS encourages a mindset of bringing together disparate sources to make something new. This is why artists could potentially feel at home. There’s never a clean slate when you make a work of art or design. We are informed by our personal history, we are informed by all the other works we know.

Arguments against open design include that the process itself isn't clear, there aren't easy objective measurements of success (like a function works or it doesn't, a design is sort of subjective in this regard...)

Is the accessiblity of a tool at issue? is the accessibility a problem?

does just showing content/process/files/etc. count as open design?

open source = recursive?

OSD represents and emerging form of infrastructure that, at its heart, enbale non-hierarchical community sourced collaboration?

OSD is rooted in vernacular techniques. Sharing, iterating, copying whatever works best was what allowed communities to develop effective tools, clothing, shelter, objects, etc. A similar set of practices, more or less everywhere, allowed for forms to slowly iterate, progress, improve, disperse, but still to generate local flavor and specialization. Aesthetics, materials, decoration, forms are able to grow and evolve based on specific locations, but the general idea of iterative, open, designs was the way pretty much all cultures "designed" in the past. Succesful techniques were discovered to address local environmental conditions in an economic, reliable, easily duplicable manner.

Interset in this verancular approach began to surface within communities of computer scientists (this was also how scientific knowledge often is shared and grows) … this became (and is called variously) F/LOS: Free, Libre, Open Source...............

Equal parts pragamtism and utopia...

Values opennes, innovation, viability over profit.

Premised on the practices of sharing and increasing knowledge

Focus is not on the development of commodity, but on addressing the needs of community members through continuous user-sourced feedback and iteration.

Firefox Photon Design system? Solve a problem that others won't because some design decisions/bug finding comes from the community. (firefox best at screen reader friendly stuff, etc.)

As designers we can integarate open principles into our practices simply by being more transparent and sharing more... sharing assets, data, visual components, processes... By making generosity a key component of practice, designers can build a rich ecosystem of collaboration and inspiration.

designers can choose to use open source tools like Scribus or Fontforge. Free to modify their tools, open source designers have the power to change the aesthetic mode of production. This is particularly important because, as Fredric Jameson writes in _Postmodernisn, or The Cultural Logic of Late Capitalism_, because, “[a]esthetic production has become integrated into commodity production.” By using open source tools, designers can reclaim autonomy and authorship. [potential connection with Dunne/Raby, Mari, and the modernsim is bad conversation our class had]

Still, the boundaries that define open source design are difficult to articulate. For some designers, the OSD approach may entail the use of open source programs such as Sketch or Scribus. For others, it may mean designing a custom GitHub page for a worthy piece of open source software. Still for others it may mean sharing resources, process, and knowledge. However, most examples of open source design, such as Mozilla’s Photon Design, remain directly connected to the world of open source software. While the infrastructure of open source software has been intentionally developed,open source design is a practice still in its infancy, and lacks an effective platform to leverage the power of the community.

Participation in the open source community can cause radical shifts in design thinking, forcing dialogue into practice and problematizing tools often taken for granted. In the end, this may be the most significant advantage of open source design. As Enzo Mari writes in Autoprogettazione, building your own tools is the "best way to avoid being designed yourself." If everyone is given the opportunity to shape these tools, perhaps it is possible to design in a way which is responsive to the needs of the many, filling vital roles through user engagement. This not only guarantees greater inclusivity and accessibility, but represents a fundamental shift away from the capitalist mindset.

Am i really this much of a communist? In my thinking about sustainability, I've been moving towards the idea that my tools are incorrect. Adobe's creative suite is a creation of a modernist/capitalist system that is creating the sustainablity issues. If this is the case, only another set of tools should be supported. Is that where the OS stuff comes in? That's where it started for me — fonts — open fonts seemed more sustainable and egalitarian. From there I've moved towards more instrinsically open tools. I've been trying to make the way I work more transparent as well. 

±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±

## References:

Still need dates, authors, etc. and to format according to CMOS.

- The GNU Manifesto: https://www.gnu.org/gnu/manifesto.en.html
- The Four Essential Freedoms: https://www.gnu.org/philosophy/free-sw.html
- Open Design Manifesto: http://opendesign.foundation/articles/the-open-source-design-manifesto/
- Open Source Design Is Now Design Open: https://medium.com/design-open/open-source-design-is-now-design-open-e7005d577f6b
- On being a Unicorn: the case for user-involvement in F/LOSS, libre graphics 1.2
- Designing Open Source: https://medium.com/words-about-design/designing-open-source-e3adc220cfa7
- This is the first day of the rest of my life, Eric Schrijver, libre graphics 1.1


»»»»»»»»»

Open Source Design

Brief:
What do the tools and ethos from Free/Libre/Open Source (FLOS) communities bring to a visual designer's education and praxis?

500 Word Abstract:

Open source software powers much of the web and the modern tech world. Open source hardware powers all manner of maker spaces, workshops and offices. How do we use these mechanisms to the benefit of Graphic Design? This article's goal is to present the root ideals of the free/libre/open source software movements, and then apply them to the making of graphic design. Part of the paper covers the use of open source design tools, analyzing their pros and cons when compared to typical “industry-standard” making methods. This paper also presents how the research, discussions, interviews, experiments, and work/output of the course “Open Source Design” (running Jan-May 2018) changes the ways a designer envisions their practice and methods of making. The paper utilizes the author's own work and research, work and research from the FLOSS community, as well as content created by their students to support the arguments. The way one works with FLOSS tools and ideals creates different systems, processes, methodologies, and aesthetics. The works of the author and their students provide interesting visual and code-based examples to help answer and illustrate this. Questions being answered: What does “Open Source” mean in a Graphic Design context? How do visual designers help to iterate & improve these tools without the ability to code? How do non-mainstream tools change how we make graphic design? How do our design processes evolve & maintain transparency the same way open source communities & projects do? What do accessibility, transparency, and “freedom” bring aesthetically to visual design solutions?

Reviewer 1
Been waiting for this.
The proposal poses some interesting questions. Specifically, these broad and philosophical questions are located in paragraph 1. In paragraph 2, the proposal falls flat. I would recommend to the author, that s/he focus on addressing the questions raised in the first paragraph. If the paper simply becomes a write-up of the teaching experience, it will essentially retread many ideas and experiences that all faculty have already had in the classroom. The paper has the potential to be more provocative is it deals with the issues of "reuse," "accessibility," "transparency," "tools and ideas," et al. than if it becomes a reporting of a classroom experience.

Reviewer 2
Another hot topic that seems to be arising quickly with ever changing technology.
I attended design conferences just last year and haven't heard this topic being discussed in a Design-Ed environment. I would be very interested to see how this open source softwares are integrated into the classroom.

Reviewer 3
Very thorough, supports how all claims will be executed and discussed. It is very clear what will take place during this presentation.
I'm sure there are concrete examples of how you use this software in both the presentation and paper, but I would suggest perhaps including sample assignments as well to illustrate how to effectively implement these FLOSS programs into the classroom.
